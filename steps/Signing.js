var prompt = require('prompt-sync')();
const defineSupportCode = require("cucumber").defineSupportCode;
const assert = require('assert');
const APIURL = "https://int.api.service.nhs.uk/signing-service";
const validJWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0KICBdLAogICJhbGdvcml0aG0iOiAiUlMxIiwKICAiaWF0IjogMTYyODE3Njg3MiwKICAiZXhwIjogMTgyODE3NzQ3MiwKICAiYXVkIjogImh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLAogICJpc3MiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLAogICJzdWIiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiCn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
const validSignatureResponse = {
	"signatures": [
		{
			"id": "ZjE2NWE2OTMtOGFmMC00MWRkLWEyYjEtYzgzMWQ2NGY1Nzky",
			"signature": "Q+yEfnM5PA2punGmevuvLtwj4+XRsWeeiq7SJ9Ekd28NJ9jVtCa9oB3bU2aGl5wlX8HufH2GFJgg9o9OFFrSvRAPpgWKW4/+3aL06S9B7YT4MQP/7St2gL1v2+v4tmQ7CSvF+VTFVugIezewAQPKvhJaNLHD+njOD+60W9pK17U="
		}
	],
	"certificate": "MIID9DCCAtygAwIBAgIEQd28HjANBgkqhkiG9w0BAQUFADAyMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MwHhcNMDUwNjAzMDg0OTM5WhcNMDcwNjAzMDkxOTM5WjBFMQwwCgYDVQQKDANuaHMxDzANBgNVBAsMBlBlb3BsZTEkMCIGA1UEAwwbNjY5ODEwODE5MDEzX2pvaG5fd2hpdGVzaWRlMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCd56UQCtS3DFH7gy851azIEcPXwwqnhR1U7/a6xGqVjw+eKzBr2JW96loo6qDyCvhyokkYfteRP428e9euU11YdcOXQkqlRp7OpqAJSGdcgdMn5GCpKOU5eQVkvKq7eVXRBGoHfDbK5eakY3g51VorjVrRWK3UTNHLaJ9i265+cwIDAQABo4IBgTCCAX0wDgYDVR0PAQH/BAQDAgZAMCsGA1UdEAQkMCKADzIwMDUwNjAzMDg0OTM5WoEPMjAwNzA2MDMwOTE5MzlaMIGBBgNVHSABAf8EdzB1MHMGCyqGOgCJe2YAAwIAMGQwYgYIKwYBBQUHAgEWVmh0dHA6Ly9ud3cubnBmaXQubmhzLnVrL2luZm9ybWF0aW9uX2dvdmVybmFuY2UvY2VydGlmaWNhdGVfcG9saWNpZXMvY29udGVudF9jb21taXRtZW50MFQGA1UdHwRNMEswSaBHoEWkQzBBMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MxDTALBgNVBAMTBENSTDYwHwYDVR0jBBgwFoAUf9nfwHnN3lyRuNDqm6KbL5rJrbswHQYDVR0OBBYEFJwcDZUFw6Ycp+tbiRfSNc9O8sGcMAkGA1UdEwQCMAAwGQYJKoZIhvZ9B0EABAwwChsEVjcuMQMCBLAwDQYJKoZIhvcNAQEFBQADggEBAER1g1MwPA6t+y2TJYKEx/fgGUSCCqaCoNvCPNTG32rr8Xcn6csMPn0YunxQe2QrOImRwgbNzgAA1mwggVXt7SpFyhSsAy8k3MdtFeypgbjRpuG5m9IWS9pqoztYnmUfgtsBoms5s4y4exGr68OsF1f2hum96bQ4Ee6De9kAnFJBfCHHNW2NqhdVZ/83VCe09iOYEuJAubGTsWkhMWvqrbsrjmVR7KakiMNkRTPQ4KaexX8coC7+AR/ijvoCMjBXS5vcIX60I2359M2gaQjGjA6bzcuq9y6/MlkAJYo3bbCvwJI4721eHml2X61IAm8nllO0iuRYNf+Vot6nOWhtHc4="
};

defineSupportCode(function ({ Given, Then, When }) {
	let JWT;
	let response;
	let access_token;
	let valid_access_token = prompt('New access token ( from https://nhsd-apim-testing-int-ns.herokuapp.com/ ) please: ');
	let token;
	let signatureResponse;


	Given('I start with a valid JWT', function () {
		JWT = validJWT;
	});

	// Failings in the upplied JWT header...
	Given('I start with a JWT signed with RS1', function () {
		JWT = "eyJhbGciOiJSUzEiLCJ0eXAiOiJKV1QiLCJraWQiOiJrZXktMSJ9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no alg claim', function () {
		JWT = "ewogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no kid claim', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no typ claim', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJraWQiOiAibm9uc2Vuc2UiCn0.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});


	// Failings in the supplied JWT Signature
	Given('I start with a JWT with a bogus signature', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.Tk9OU0VOU0U";
	});

	Given('I start with a JWT with no signature', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIiwic3ViIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQifQ.";
	});

	// Failings in the supplied JWT payload
	Given('I start with a JWT with empty payloads array', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFtdLAogICJhbGdvcml0aG0iOiAiUlMxIiwKICAiaWF0IjogMTYyODE3Njg3MiwKICAiZXhwIjogMTgyODE3NzQ3MiwKICAiYXVkIjogImh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLAogICJpc3MiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLAogICJzdWIiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiCn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with duplicate IDs in payloads array', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0sewogICAgICAiaWQiOiAiMSIsCiAgICAgICJwYXlsb2FkIjogIlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIgogICAgfQogIF0sCiAgImFsZ29yaXRobSI6ICJSUzEiLAogICJpYXQiOiAxNjI4MTc2ODcyLAogICJleHAiOiAxODI4MTc3NDcyLAogICJhdWQiOiAiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsCiAgImlzcyI6ICJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIsCiAgInN1YiI6ICJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIKfQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no iat in the payload', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJleHAiOjE2MjgxNzc0NzIsImF1ZCI6Imh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLCJpc3MiOiJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIsInN1YiI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no exp in the payload', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImF1ZCI6Imh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLCJpc3MiOiJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIsInN1YiI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no iss in the payload', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsInN1YiI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no sub in the payload', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiYXVkIjoiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsImlzcyI6InF2UDlOb1FjT1ZxS3JYRWR0THY4QjBqN3A1Vm1qUERkIn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT with no aud in the payload', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.eyJwYXlsb2FkcyI6W3siaWQiOiIxIiwicGF5bG9hZCI6IlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIn1dLCJhbGdvcml0aG0iOiJSUzEiLCJpYXQiOjE2MjgxNzY4NzIsImV4cCI6MTYyODE3NzQ3MiwiaXNzIjoicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLCJzdWIiOiJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCJ9.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT signed with a not yet valid certificate', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0KICBdLAogICJhbGdvcml0aG0iOiAiUlMxIiwKICAiaWF0IjogMTgyODE3Njg3MiwKICAiZXhwIjogMTgyODE3NzQ3MiwKICAiYXVkIjogImh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLAogICJpc3MiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLAogICJzdWIiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiCn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	Given('I start with a JWT signed with an expired certificate', function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0KICBdLAogICJhbGdvcml0aG0iOiAiUlMxIiwKICAiaWF0IjogMTUyODE3Njg3MiwKICAiZXhwIjogMTUyODE3NzQ3MiwKICAiYXVkIjogImh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLAogICJpc3MiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLAogICJzdWIiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiCn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
	});

	// Support GET /signaturerequest
	Given('I submit a valid SignatureRequest', async function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0KICBdLAogICJhbGdvcml0aG0iOiAiUlMxIiwKICAiaWF0IjogMTYyODE3Njg3MiwKICAiZXhwIjogMTgyODE3NzQ3MiwKICAiYXVkIjogImh0dHBzOi8vaW50ZXJuYWwtZGV2LmFwaS5zZXJ2aWNlLm5ocy51ay9zaWduaW5nLXNlcnZpY2UiLAogICJpc3MiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiLAogICJzdWIiOiAicXZQOU5vUWNPVnFLclhFZHRMdjhCMGo3cDVWbWpQRGQiCn0.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
		response = await fetch(APIURL + "/signaturerequest", {
			method: 'POST',
			headers: {
				'Content-Type': 'text/plain',
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			},
			body: JWT
		});
		let jsn = await response.json();
		token = jsn.token;
		return true;
	});

	// Generic to handle access tokens
	Given('I have a valid access_token', function () {
		access_token = valid_access_token;
	});

	Given('I have AN EXPIRED access_token', function () {
		access_token = "SqFsotA0tFn2EbArOrO9wG0Jqec3";
	});

	// Support for POST /signatureresponse
	Given('I have a valid SignatureResponse', function () {
		signatureResponse = validSignatureResponse;
	});

	Given('I have a valid SignatureResponse for id 3', function () {
		signatureResponse = {
			"signatures": [
				{
					"id": "3",
					"signature": "Q+yEfnM5PA2punGmevuvLtwj4+XRsWeeiq7SJ9Ekd28NJ9jVtCa9oB3bU2aGl5wlX8HufH2GFJgg9o9OFFrSvRAPpgWKW4/+3aL06S9B7YT4MQP/7St2gL1v2+v4tmQ7CSvF+VTFVugIezewAQPKvhJaNLHD+njOD+60W9pK17U="
				}
			],
			"certificate": "MIID9DCCAtygAwIBAgIEQd28HjANBgkqhkiG9w0BAQUFADAyMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MwHhcNMDUwNjAzMDg0OTM5WhcNMDcwNjAzMDkxOTM5WjBFMQwwCgYDVQQKDANuaHMxDzANBgNVBAsMBlBlb3BsZTEkMCIGA1UEAwwbNjY5ODEwODE5MDEzX2pvaG5fd2hpdGVzaWRlMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCd56UQCtS3DFH7gy851azIEcPXwwqnhR1U7/a6xGqVjw+eKzBr2JW96loo6qDyCvhyokkYfteRP428e9euU11YdcOXQkqlRp7OpqAJSGdcgdMn5GCpKOU5eQVkvKq7eVXRBGoHfDbK5eakY3g51VorjVrRWK3UTNHLaJ9i265+cwIDAQABo4IBgTCCAX0wDgYDVR0PAQH/BAQDAgZAMCsGA1UdEAQkMCKADzIwMDUwNjAzMDg0OTM5WoEPMjAwNzA2MDMwOTE5MzlaMIGBBgNVHSABAf8EdzB1MHMGCyqGOgCJe2YAAwIAMGQwYgYIKwYBBQUHAgEWVmh0dHA6Ly9ud3cubnBmaXQubmhzLnVrL2luZm9ybWF0aW9uX2dvdmVybmFuY2UvY2VydGlmaWNhdGVfcG9saWNpZXMvY29udGVudF9jb21taXRtZW50MFQGA1UdHwRNMEswSaBHoEWkQzBBMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MxDTALBgNVBAMTBENSTDYwHwYDVR0jBBgwFoAUf9nfwHnN3lyRuNDqm6KbL5rJrbswHQYDVR0OBBYEFJwcDZUFw6Ycp+tbiRfSNc9O8sGcMAkGA1UdEwQCMAAwGQYJKoZIhvZ9B0EABAwwChsEVjcuMQMCBLAwDQYJKoZIhvcNAQEFBQADggEBAER1g1MwPA6t+y2TJYKEx/fgGUSCCqaCoNvCPNTG32rr8Xcn6csMPn0YunxQe2QrOImRwgbNzgAA1mwggVXt7SpFyhSsAy8k3MdtFeypgbjRpuG5m9IWS9pqoztYnmUfgtsBoms5s4y4exGr68OsF1f2hum96bQ4Ee6De9kAnFJBfCHHNW2NqhdVZ/83VCe09iOYEuJAubGTsWkhMWvqrbsrjmVR7KakiMNkRTPQ4KaexX8coC7+AR/ijvoCMjBXS5vcIX60I2359M2gaQjGjA6bzcuq9y6/MlkAJYo3bbCvwJI4721eHml2X61IAm8nllO0iuRYNf+Vot6nOWhtHc4="
		};
	});

	Given('I have a SignatureResponse with no certificate', function () {
		signatureResponse = {
			"signatures": [
				{
					"id": "ZjE2NWE2OTMtOGFmMC00MWRkLWEyYjEtYzgzMWQ2NGY1Nzky",
					"signature": "Q+yEfnM5PA2punGmevuvLtwj4+XRsWeeiq7SJ9Ekd28NJ9jVtCa9oB3bU2aGl5wlX8HufH2GFJgg9o9OFFrSvRAPpgWKW4/+3aL06S9B7YT4MQP/7St2gL1v2+v4tmQ7CSvF+VTFVugIezewAQPKvhJaNLHD+njOD+60W9pK17U="
				}
			]
		};
	});

	Given('I have a SignatureResponse with no signatures', function () {
		signatureResponse = {
			"certificate": "MIID9DCCAtygAwIBAgIEQd28HjANBgkqhkiG9w0BAQUFADAyMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MwHhcNMDUwNjAzMDg0OTM5WhcNMDcwNjAzMDkxOTM5WjBFMQwwCgYDVQQKDANuaHMxDzANBgNVBAsMBlBlb3BsZTEkMCIGA1UEAwwbNjY5ODEwODE5MDEzX2pvaG5fd2hpdGVzaWRlMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCd56UQCtS3DFH7gy851azIEcPXwwqnhR1U7/a6xGqVjw+eKzBr2JW96loo6qDyCvhyokkYfteRP428e9euU11YdcOXQkqlRp7OpqAJSGdcgdMn5GCpKOU5eQVkvKq7eVXRBGoHfDbK5eakY3g51VorjVrRWK3UTNHLaJ9i265+cwIDAQABo4IBgTCCAX0wDgYDVR0PAQH/BAQDAgZAMCsGA1UdEAQkMCKADzIwMDUwNjAzMDg0OTM5WoEPMjAwNzA2MDMwOTE5MzlaMIGBBgNVHSABAf8EdzB1MHMGCyqGOgCJe2YAAwIAMGQwYgYIKwYBBQUHAgEWVmh0dHA6Ly9ud3cubnBmaXQubmhzLnVrL2luZm9ybWF0aW9uX2dvdmVybmFuY2UvY2VydGlmaWNhdGVfcG9saWNpZXMvY29udGVudF9jb21taXRtZW50MFQGA1UdHwRNMEswSaBHoEWkQzBBMQwwCgYDVQQKEwNuaHMxCzAJBgNVBAsTAkNBMRUwEwYDVQQDFAxOSVMyX1NVQkNBQ0MxDTALBgNVBAMTBENSTDYwHwYDVR0jBBgwFoAUf9nfwHnN3lyRuNDqm6KbL5rJrbswHQYDVR0OBBYEFJwcDZUFw6Ycp+tbiRfSNc9O8sGcMAkGA1UdEwQCMAAwGQYJKoZIhvZ9B0EABAwwChsEVjcuMQMCBLAwDQYJKoZIhvcNAQEFBQADggEBAER1g1MwPA6t+y2TJYKEx/fgGUSCCqaCoNvCPNTG32rr8Xcn6csMPn0YunxQe2QrOImRwgbNzgAA1mwggVXt7SpFyhSsAy8k3MdtFeypgbjRpuG5m9IWS9pqoztYnmUfgtsBoms5s4y4exGr68OsF1f2hum96bQ4Ee6De9kAnFJBfCHHNW2NqhdVZ/83VCe09iOYEuJAubGTsWkhMWvqrbsrjmVR7KakiMNkRTPQ4KaexX8coC7+AR/ijvoCMjBXS5vcIX60I2359M2gaQjGjA6bzcuq9y6/MlkAJYo3bbCvwJI4721eHml2X61IAm8nllO0iuRYNf+Vot6nOWhtHc4="
		};
	});

	// Combined actions to get us there...
	Given('I submit and get a valid SignatureRequest', async function () {
		JWT = validJWT;
		response = await fetch(APIURL + "/signaturerequest", {
			method: 'POST',
			headers: {
				'Content-Type': 'text/plain',
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			},
			body: JWT
		});
		let jsn = await response.json();
		token = jsn.token;

		response = await fetch(APIURL + "/signaturerequest/" + token, {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		}).then(async response => {
			//console.log("Response: " + await response.text());
		});
		return true;
	});

	Given('I submit and get a SignatureRequest with multiple payloads', async function () {
		JWT = "ewogICJhbGciOiAiUlM1MTIiLAogICJ0eXAiOiAiSldUIiwKICAia2lkIjogIm5vbnNlbnNlIgp9.ewogICJwYXlsb2FkcyI6IFsKICAgIHsKICAgICAgImlkIjogIjEiLAogICAgICAicGF5bG9hZCI6ICJQRk5wWjI1bFpFbHVabTgrUEVOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUWdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZRMkZ1YjI1cFkyRnNhWHBoZEdsdmJrMWxkR2h2WkQ0OFUybG5ibUYwZFhKbFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNKellTMXphR0V4SWo0OEwxTnBaMjVoZEhWeVpVMWxkR2h2WkQ0OFVtVm1aWEpsYm1ObFBqeFVjbUZ1YzJadmNtMXpQanhVY21GdWMyWnZjbTBnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2VkhKaGJuTm1iM0p0UGp3dlZISmhibk5tYjNKdGN6NDhSR2xuWlhOMFRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzh3T1M5NGJXeGtjMmxuSTNOb1lURWlQand2UkdsblpYTjBUV1YwYUc5a1BqeEVhV2RsYzNSV1lXeDFaVDQ1VVVoNlVXRkdhVEp0TDJwbk5qRllhM1JFUXpkTWEzVm9SRlU5UEM5RWFXZGxjM1JXWVd4MVpUNDhMMUpsWm1WeVpXNWpaVDQ4TDFOcFoyNWxaRWx1Wm04KyIKICAgIH0sewogICAgICAiaWQiOiAiMiIsCiAgICAgICJwYXlsb2FkIjogIlBGTnBaMjVsWkVsdVptOCtQRU5oYm05dWFXTmhiR2w2WVhScGIyNU5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlEyRnViMjVwWTJGc2FYcGhkR2x2YmsxbGRHaHZaRDQ4VTJsbmJtRjBkWEpsVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM0p6WVMxemFHRXhJajQ4TDFOcFoyNWhkSFZ5WlUxbGRHaHZaRDQ4VW1WbVpYSmxibU5sUGp4VWNtRnVjMlp2Y20xelBqeFVjbUZ1YzJadmNtMGdRV3huYjNKcGRHaHRQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBeEx6RXdMM2h0YkMxbGVHTXRZekUwYmlNaVBqd3ZWSEpoYm5ObWIzSnRQand2VkhKaGJuTm1iM0p0Y3o0OFJHbG5aWE4wVFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JM05vWVRFaVBqd3ZSR2xuWlhOMFRXVjBhRzlrUGp4RWFXZGxjM1JXWVd4MVpUNDVVVWg2VVdGR2FUSnRMMnBuTmpGWWEzUkVRemRNYTNWb1JGVTlQQzlFYVdkbGMzUldZV3gxWlQ0OEwxSmxabVZ5Wlc1alpUNDhMMU5wWjI1bFpFbHVabTgrIgogICAgfQogIF0sCiAgImFsZ29yaXRobSI6ICJSUzEiLAogICJpYXQiOiAxNjI4MTc2ODcyLAogICJleHAiOiAxODI4MTc3NDcyLAogICJhdWQiOiAiaHR0cHM6Ly9pbnRlcm5hbC1kZXYuYXBpLnNlcnZpY2UubmhzLnVrL3NpZ25pbmctc2VydmljZSIsCiAgImlzcyI6ICJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIsCiAgInN1YiI6ICJxdlA5Tm9RY09WcUtyWEVkdEx2OEIwajdwNVZtalBEZCIKfQ.eK6ak8YjcG8_k5Q0QH1fcDjmoXo-SB3ocNPW3rPLDR99hMv2EdFYulZXk3fPhL4wYaOut16jL0yTKpcfKrNFTNCYW6d7dPF5E984reqmbFqs7ic4PBIZfv8tUHYAgUBE2LT_g60PJdrME5SXcng12h1FXePWBbiAQQKAWBxLv7_aWr0HC7x9CudTr9jF8IdirFN7EpxIph73FE7j0uLmUEME-Fb2Sloi4UvtHBXVoc7KASDi9XAVngInUgsg5G8w_1642zfmbZsKJyemEYRGMHGVGmzoM_pycBxJ8a8BI3HNL_4ZpKEwUXKul09AwO2dzG9EWXTMKJNVA2oawehE4KruI3yvghQjfzq6ta9oyIJ66AKSQQd833_UEEhfLsDFIEx1Im2aVytwmSnRnpDomPuIzpZe7EdX9OR7AS7D1eGTFPX8xANoV7WM5dyrOyP5Iwwc6wztfUEbFmCxaj-qRsCE6YvCX3Pqi6XBXYwpE2x0LLX39a8kOZasAsJBWvSsGIUEBx9xt4g7wl1GbSSFZtr_SogcKGDu-Jz_4LIb5b_VH8lhYCsPxVHLaSf8wKAfecYomZO-Q8TW21B4TVO-M2pPa8Ht5BG5T2XcC-yPm66oF7OUze0uNaRhMXXPRtSYbXxVOlZB7VtywN5MFH4WgXjAepw0pQ9EcVVVAGFJjD0";
		response = await fetch(APIURL + "/signaturerequest", {
			method: 'POST',
			headers: {
				'Content-Type': 'text/plain',
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			},
			body: JWT
		});
		let jsn = await response.json();
		token = jsn.token;

		response = await fetch(APIURL + "/signaturerequest/" + token, {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		}).then(async response => {
			//console.log("Response: " + await response.text());
		});
		return true;
	});


	When('I post it to /signaturerequest', async function () {
		response = await fetch(APIURL + "/signaturerequest", {
			method: 'POST',
			headers: {
				'Content-Type': 'text/plain',
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			},
			body: JWT
		});
		return true;
	});

	When('I post it to /signatureresponse', async function () {
		response = await fetch(APIURL + "/signatureresponse/" + token, {
			method: 'POST',
			headers: {
				'Authorization': 'Bearer ' + access_token,
				'Content-Type': 'application/JSON',
			},
			body: JSON.stringify(signatureResponse)
		});
		return true;
	});

	When('I post it to /signatureresponse using the wrong token', async function () {
		response = await fetch(APIURL + "/signatureresponse/YWJmNjZiZTItYTE3NC00N2RlLTkxNzgtYzFjZDA2NWJmZGJh", {
			method: 'POST',
			headers: {
				'Authorization': 'Bearer ' + access_token,
				'Content-Type': 'application/JSON',
			},
			body: JSON.stringify(signatureResponse)
		});
		return true;
	});

	When('I post it to /signatureresponse using an invalid token', async function () {
		response = await fetch(APIURL + "/signatureresponse/YWJmNjZiZTItYTE3NC00N2RlLTkxNzgtYzFjZD___WJmZGJh", {
			method: 'POST',
			headers: {
				'Authorization': 'Bearer ' + access_token,
				'Content-Type': 'application/JSON',
			},
			body: JSON.stringify(signatureResponse)
		});
		return true;
	});

	When('I GET from /signaturerequest', async function () {
		response = await fetch(APIURL + "/signaturerequest/" + token, {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		});
		return true;
	});

	When('I GET from /signaturerequest with an incorrect token', async function () {
		response = await fetch(APIURL + "/signaturerequest/YWJmNjZiZTItYTE3NC00N2RlLTkxNzgtYzFjZDA2NWJmZGJh", {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		});
		return true;
	});

	When('I GET from /signaturerequest with an invalid token', async function () {
		response = await fetch(APIURL + "/signaturerequest/YWJmNjZiZTItYTE3NC00N2RlLTkxNzgtYzFjZD___WJmZGJh", {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		});
		return true;
	});



	// Support for GET SignatureResponse
	When('I GET from /signatureresponse', async function () {
		response = await fetch(APIURL + "/signatureresponse/" + token, {
			headers: {
				'Accept': 'application/json',
				'Authorization': 'Bearer ' + access_token
			}
		});
		return true;
	});


	// Here come our assertions
	Then('I get statusCode {word}', function (expected) {
		assert.equal(response.status, expected);
	});

	Then('I get message {string}', async function (expected) {
		let res = await response.json();
		assert.ok('message' in res);
		assert.equal(res.message, expected);
	});

	Then('I get message containing {string}', async function (expected) {
		let res = await response.json();
		assert.ok(res.message.indexOf(expected));
	});

	Then('I get a token', async function () {
		let res = await response.json();
		//console.log(JSON.stringify(res));
		assert.ok('token' in res);
		assert.ok('redirectUri' in res);
	});

	Then('I get the original SignatureRequest', async function () {
		let res = await response.text();
		assert.equal(res, JWT);
	});

	Then('I get the expected SignatureResponse', async function () {
		let res = await response.json();
		//console.log(res);
		//console.log(validSignatureResponse);
		assert.equal(res.signatures[0].id, validSignatureResponse.signatures[0].id);
		assert.equal(res.signatures[0].signature, validSignatureResponse.signatures[0].signature);
		assert.equal(res.certificate, validSignatureResponse.certificate);
	});

});